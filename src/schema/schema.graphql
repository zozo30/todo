scalar DateTime

input TodoFilter {
  completed: Boolean
  pagination: PaginationInput
}

type Todo {
  id: Int!
  description: String!
  createdAt: DateTime
  updatedAt: DateTime
  completed: Boolean
}

type ListResult {
  items: [Todo]
  total: Int
  page: Int
  pages: Int
  take: Int
  skip: Int
}

input PaginationInput {
  skip: Int
  take: Int
}

input TodoInput {
  description: String!
}

input TodoModifyInput {
  id: Int!
  description: String
  completed: Boolean
}

input TodoCompletedInput {
  id: Int!
  completed: Boolean
}

type Query {
  todos(filters: TodoFilter): ListResult!
  todo(id: Int!): Todo
}

type Mutation {
  createTodo(input: TodoInput!): Todo
  modifyTodo(input: TodoModifyInput!): Boolean
  removeTodo(id: Int!): Boolean
  setCompleted(input: TodoCompletedInput): Boolean
}
